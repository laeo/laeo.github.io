#!/usr/bin/env node

'use strict';

const path = require('path');
const fs   = require('fs');
const exec = require('child_process').execSync;

let metadata = require('./metadata.json')
  ,posts  = require('./posts/posts.json');

let args     = process.argv.slice(2);
let options  = args.filter(op => { return op.indexOf('-') === 0; });
let commands = args.filter(op => { return op.indexOf('-') !== 0; })
let op       = commands.shift();

let PostName;

switch (op) {
  case 'new':
    PostName = commands.shift().trim();
    let datetime = new Date();
    let today    = datetime.getFullYear()
                 + '/'
                 + ('0' + (datetime.getMonth() + 1)).slice(-2)
                 + '/'
                 + ('0' + datetime.getDate()).slice(-2);

    let dest     = path.join(__dirname, 'posts', today);

    if (PostName === null || PostName === undefined) {
      console.warn('Missing post name.');
      console.warn('Usage: stage new [post_name]');
      process.exit(1);
    }

    if(posts[PostName] !== undefined && options.indexOf('-f') === -1) {
      console.warn('The same article already exists.')
      process.exit(1);
    }

    exec('mkdir -p ' + dest);

    let PostFileName = PostName + '.md';
    let PostFile     = path.join(dest, PostFileName);
    let metainfo     = `# ${PostName}\r\n\r\n`;
        metainfo    += `> Author : ${metadata.author}\r\n\r\n`;
        metainfo    += `> Date   : ${today}\r\n\r\n`;
        metainfo    += `> License: ${metadata.license}\r\n\r\n`;

    fs.writeFile(PostFile, metainfo, 'utf8', function(err) {
      if(err) {
        throw err;
      }

      console.log('File created at: '+ PostFile);

      posts[PostName] = path.join(today, PostFileName);
      fs.writeFileSync(path.join(__dirname, 'posts.json'), JSON.stringify(posts));
    });

    break;
  case 'del':
    PostName = commands.shift().trim();
    if(posts[PostName] !== undefined) {
      exec('rm -f ' + path.join(__dirname, 'posts', posts[PostName]));
      delete posts[PostName];
      fs.writeFileSync(path.join(__dirname, 'posts.json'), JSON.stringify(posts));
      console.log('Article removed.');
    } else {
      console.log('No article found.');
    }

    break;
  case '-h':
  default:
    console.info('Usage: stage [command] [...arguments]');
    console.info('Commands:');
    console.info('  new [post_name]     Create new article');
    console.info('  del [post_name]     Delete the article');
    console.log('');
    console.info('Options:');
    console.info('  -h                  Show help message');
    console.info('  -f                  Force to create new article');
    break;
}
